/* config.h.in.  Generated By CMake during the configuration  */

#ifndef CONFIG_H_
#define CONFIG_H_

/* Define if building universal (internal helper macro) */
#cmakedefine AC_APPLE_UNIVERSAL_BUILD @AC_APPLE_UNIVERSAL_BUILD@

/* How many MiB of RAM to assume if the real amount cannot be determined. */
#cmakedefine ASSUME_RAM ${ASSUME_RAM}

/* Define to 1 if translation of program messages to the user's native
   language is requested. */
#cmakedefine ENABLE_NLS ${ENABLE_NLS}

/* Define to 1 if bswap_16 is available. */
#cmakedefine HAVE_BSWAP_16 ${HAVE_BSWAP_16}

/* Define to 1 if bswap_32 is available. */
#cmakedefine HAVE_BSWAP_32 ${HAVE_BSWAP_32}

/* Define to 1 if bswap_64 is available. */
#cmakedefine HAVE_BSWAP_64 ${HAVE_BSWAP_64}

/* Define to 1 if you have the <byteswap.h> header file. */
#cmakedefine HAVE_BYTESWAP_H ${HAVE_BYTESWAP_H}

/* Define to 1 if you have the MacOS X function CFLocaleCopyCurrent in the
   CoreFoundation framework. */
#cmakedefine HAVE_CFLOCALECOPYCURRENT ${HAVE_CFLOCALECOPYCURRENT}

/* Define to 1 if you have the MacOS X function CFPreferencesCopyAppValue in
   the CoreFoundation framework. */
#cmakedefine HAVE_CFPREFERENCESCOPYAPPVALUE ${HAVE_CFPREFERENCESCOPYAPPVALUE}

/* Define to 1 if crc32 integrity check is enabled. */
#cmakedefine HAVE_CHECK_CRC32 ${HAVE_CHECK_CRC32}

/* Define to 1 if crc64 integrity check is enabled. */
#cmakedefine HAVE_CHECK_CRC64 ${HAVE_CHECK_CRC64}

/* Define to 1 if sha256 integrity check is enabled. */
#cmakedefine HAVE_CHECK_SHA256 ${HAVE_CHECK_SHA256}

/* Define if the GNU dcgettext() function is already present or preinstalled.
   */
#cmakedefine HAVE_DCGETTEXT ${HAVE_DCGETTEXT}

/* Define to 1 if you have the declaration of `program_invocation_name', and
   to 0 if you don't. */
#cmakedefine HAVE_DECL_PROGRAM_INVOCATION_NAME ${HAVE_DECL_PROGRAM_INVOCATION_NAME}

/* Define to 1 if arm decoder is enabled. */
#cmakedefine HAVE_DECODER_ARM ${HAVE_DECODER_ARM}

/* Define to 1 if armthumb decoder is enabled. */
#cmakedefine HAVE_DECODER_ARMTHUMB ${HAVE_DECODER_ARMTHUMB}

/* Define to 1 if delta decoder is enabled. */
#cmakedefine HAVE_DECODER_DELTA ${HAVE_DECODER_DELTA}

/* Define to 1 if ia64 decoder is enabled. */
#cmakedefine HAVE_DECODER_IA64 ${HAVE_DECODER_IA64}

/* Define to 1 if lzma1 decoder is enabled. */
#cmakedefine HAVE_DECODER_LZMA1 ${HAVE_DECODER_LZMA1}

/* Define to 1 if lzma2 decoder is enabled. */
#cmakedefine HAVE_DECODER_LZMA2 ${HAVE_DECODER_LZMA2}

/* Define to 1 if powerpc decoder is enabled. */
#cmakedefine HAVE_DECODER_POWERPC ${HAVE_DECODER_POWERPC}

/* Define to 1 if sparc decoder is enabled. */
#cmakedefine HAVE_DECODER_SPARC ${HAVE_DECODER_SPARC}

/* Define to 1 if x86 decoder is enabled. */
#cmakedefine HAVE_DECODER_X86 ${HAVE_DECODER_X86}

/* Define to 1 if you have the <dlfcn.h> header file. */
#cmakedefine HAVE_DLFCN_H ${HAVE_DLFCN_H}

/* Define to 1 if arm encoder is enabled. */
#cmakedefine HAVE_ENCODER_ARM ${HAVE_ENCODER_ARM}

/* Define to 1 if armthumb encoder is enabled. */
#cmakedefine HAVE_ENCODER_ARMTHUMB ${HAVE_ENCODER_ARMTHUMB}

/* Define to 1 if delta encoder is enabled. */
#cmakedefine HAVE_ENCODER_DELTA ${HAVE_ENCODER_DELTA}

/* Define to 1 if ia64 encoder is enabled. */
#cmakedefine HAVE_ENCODER_IA64 ${HAVE_ENCODER_IA64}

/* Define to 1 if lzma1 encoder is enabled. */
#cmakedefine HAVE_ENCODER_LZMA1 ${HAVE_ENCODER_LZMA1}

/* Define to 1 if lzma2 encoder is enabled. */
#cmakedefine HAVE_ENCODER_LZMA2 ${HAVE_ENCODER_LZMA2}

/* Define to 1 if powerpc encoder is enabled. */
#cmakedefine HAVE_ENCODER_POWERPC ${HAVE_ENCODER_POWERPC}

/* Define to 1 if sparc encoder is enabled. */
#cmakedefine HAVE_ENCODER_SPARC ${HAVE_ENCODER_SPARC}

/* Define to 1 if x86 encoder is enabled. */
#cmakedefine HAVE_ENCODER_X86 ${HAVE_ENCODER_X86}

/* Define to 1 if you have the <fcntl.h> header file. */
#cmakedefine HAVE_FCNTL_H ${HAVE_FCNTL_H}

/* Define to 1 if you have the `futimens' function. */
#cmakedefine HAVE_FUTIMENS ${HAVE_FUTIMENS}

/* Define to 1 if you have the `futimes' function. */
#cmakedefine HAVE_FUTIMES ${HAVE_FUTIMES}

/* Define to 1 if you have the `futimesat' function. */
#cmakedefine HAVE_FUTIMESAT ${HAVE_FUTIMESAT}

/* Define to 1 if you have the <getopt.h> header file. */
#cmakedefine HAVE_GETOPT_H ${HAVE_GETOPT_H}

/* Define to 1 if you have the `getopt_long' function. */
#cmakedefine HAVE_GETOPT_LONG ${HAVE_GETOPT_LONG}

/* Define if the GNU gettext() function is already present or preinstalled. */
#cmakedefine HAVE_GETTEXT ${HAVE_GETTEXT}

/* Define if you have the iconv() function. */
#cmakedefine HAVE_ICONV ${HAVE_ICONV}

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H ${HAVE_INTTYPES_H}

/* Define to 1 if you have the <limits.h> header file. */
#cmakedefine HAVE_LIMITS_H ${HAVE_LIMITS_H}

/* Define to 1 if mbrtowc and mbstate_t are properly declared. */
#cmakedefine HAVE_MBRTOWC ${HAVE_MBRTOWC}

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H ${HAVE_MEMORY_H}

/* Define to 1 to enable bt2 match finder. */
#cmakedefine HAVE_MF_BT2 ${HAVE_MF_BT2}

/* Define to 1 to enable bt3 match finder. */
#cmakedefine HAVE_MF_BT3 ${HAVE_MF_BT3}

/* Define to 1 to enable bt4 match finder. */
#cmakedefine HAVE_MF_BT4 ${HAVE_MF_BT4}

/* Define to 1 to enable hc3 match finder. */
#cmakedefine HAVE_MF_HC3 ${HAVE_MF_HC3}

/* Define to 1 to enable hc4 match finder. */
#cmakedefine HAVE_MF_HC4 ${HAVE_MF_HC4}

/* Define to 1 if getopt.h declares extern int optreset. */
#cmakedefine HAVE_OPTRESET ${HAVE_OPTRESET}

/* Define if you have POSIX threads libraries and header files. */
#cmakedefine HAVE_PTHREAD ${HAVE_PTHREAD}

/* Have PTHREAD_PRIO_INHERIT. */
#cmakedefine HAVE_PTHREAD_PRIO_INHERIT ${HAVE_PTHREAD_PRIO_INHERIT}

/* Define to 1 if optimizing for size. */
#cmakedefine HAVE_SMALL ${HAVE_SMALL}

/* Define to 1 if stdbool.h conforms to C99. */
#cmakedefine HAVE_STDBOOL_H ${HAVE_STDBOOL_H}

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H ${HAVE_STDINT_H}

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H ${HAVE_STDLIB_H}

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H ${HAVE_STRINGS_H}

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H ${HAVE_STRING_H}

/* Define to 1 if `st_atimensec' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_ATIMENSEC ${HAVE_STRUCT_STAT_ST_ATIMENSEC}

/* Define to 1 if `st_atimespec.tv_nsec' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_ATIMESPEC_TV_NSEC ${HAVE_STRUCT_STAT_ST_ATIMESPEC_TV_NSEC}

/* Define to 1 if `st_atim.st__tim.tv_nsec' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_ATIM_ST__TIM_TV_NSEC ${HAVE_STRUCT_STAT_ST_ATIM_ST__TIM_TV_NSEC}

/* Define to 1 if `st_atim.tv_nsec' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC ${HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC}

/* Define to 1 if `st_uatime' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_UATIME ${HAVE_STRUCT_STAT_ST_UATIME}

/* Define to 1 if you have the <sys/byteorder.h> header file. */
#cmakedefine HAVE_SYS_BYTEORDER_H ${HAVE_SYS_BYTEORDER_H}

/* Define to 1 if you have the <sys/endian.h> header file. */
#cmakedefine HAVE_SYS_ENDIAN_H ${HAVE_SYS_ENDIAN_H}

/* Define to 1 if you have the <sys/param.h> header file. */
#cmakedefine HAVE_SYS_PARAM_H ${HAVE_SYS_PARAM_H}

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H ${HAVE_SYS_STAT_H}

/* Define to 1 if you have the <sys/time.h> header file. */
#cmakedefine HAVE_SYS_TIME_H ${HAVE_SYS_TIME_H}

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H ${HAVE_SYS_TYPES_H}

/* Define to 1 if the system has the type `uintptr_t'. */
#cmakedefine HAVE_UINTPTR_T ${HAVE_UINTPTR_T}

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H ${HAVE_UNISTD_H}

/* Define to 1 if you have the `utime' function. */
#cmakedefine HAVE_UTIME ${HAVE_UTIME}

/* Define to 1 if you have the `utimes' function. */
#cmakedefine HAVE_UTIMES ${HAVE_UTIMES}

/* Define to 1 or 0, depending whether the compiler supports simple visibility
   declarations. */
#cmakedefine HAVE_VISIBILITY ${HAVE_VISIBILITY}

/* Define to 1 if you have the `wcwidth' function. */
#cmakedefine HAVE_WCWIDTH ${HAVE_WCWIDTH}

/* Define to 1 if the system has the type `_Bool'. */
#cmakedefine HAVE__BOOL ${HAVE__BOOL}

/* Define to the sub-directory in which libtool stores uninstalled libraries.
   */
#cmakedefine LT_OBJDIR"@LT_OBJDIR@"

/* Define to 1 to disable debugging code. */
#cmakedefine NDEBUG ${NDEBUG}

/* Define to 1 if your C compiler doesn't accept -c and -o together. */
#cmakedefine NO_MINUS_C_MINUS_O ${NO_MINUS_C_MINUS_O}

/* Name of package */
#define PACKAGE "@H5MAFISC_PACKAGE@"

/* Define to the address where bug reports for this package should be sent. */
#define PACKAGE_BUGREPORT "@H5MAFISC_PACKAGE_BUGREPORT@"

/* Define to the full name of this package. */
#define PACKAGE_NAME "@H5MAFISC_PACKAGE_NAME@"

/* Define to the full name and version of this package. */
#define PACKAGE_STRING "@H5MAFISC_PACKAGE_STRING@"

/* Define to the one symbol short name of this package. */
#define PACKAGE_TARNAME "@H5MAFISC_PACKAGE_TARNAME@"

/* Define to the home page for this package. */
#define PACKAGE_URL "@H5MAFISC_PACKAGE_URL@"

/* Define to the version of this package. */
#define PACKAGE_VERSION "@H5MAFISC_PACKAGE_VERSION@"

/* Version number of package */
#define VERSION "@H5MAFISC_VERSION@"

/* Define to necessary symbol if this constant uses a non-standard name on
   your system. */
#cmakedefine PTHREAD_CREATE_JOINABLE "@PTHREAD_CREATE_JOINABLE@"

#if !defined(__APPLE__)
/* The size of `size_t', as computed by sizeof. */
#cmakedefine SIZEOF_SIZE_T @SIZEOF_SIZE_T@

/* The size of `ssize_t', as computed by sizeof. */
#cmakedefine SIZEOF_SSIZE_T @SIZEOF_SSIZE_T@

/* The size of `long', as computed by sizeof. */
#cmakedefine SIZEOF_LONG @SIZEOF_LONG@

#else
   # if defined(__LP64__) && __LP64__
  #define SIZEOF_LONG 8
  #define SIZEOF_SIZE_T 8
  #define SIZEOF_SSIZE_T 8
  # else
  #define SIZEOF_LONG 4
  #define SIZEOF_SIZE_T 4
  #define SIZEOF_SSIZE_T 4
  # endif

#endif

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS "@STDC_HEADERS@"

/* Define to 1 if the number of available CPU cores can be detected with
   pstat_getdynamic(). */
#cmakedefine TUKLIB_CPUCORES_PSTAT_GETDYNAMIC ${TUKLIB_CPUCORES_PSTAT_GETDYNAMIC}

/* Define to 1 if the number of available CPU cores can be detected with
   sysconf(_SC_NPROCESSORS_ONLN) or sysconf(_SC_NPROC_ONLN). */
#cmakedefine TUKLIB_CPUCORES_SYSCONF ${TUKLIB_CPUCORES_SYSCONF}

/* Define to 1 if the number of available CPU cores can be detected with
   sysctl(). */
#cmakedefine TUKLIB_CPUCORES_SYSCTL ${TUKLIB_CPUCORES_SYSCTL}

/* Define to 1 if the system supports fast unaligned access to 16-bit and
   32-bit integers. */
#cmakedefine TUKLIB_FAST_UNALIGNED_ACCESS ${TUKLIB_FAST_UNALIGNED_ACCESS}

/* Define to 1 if the amount of physical memory can be detected with
   _system_configuration.physmem. */
#cmakedefine TUKLIB_PHYSMEM_AIX ${TUKLIB_PHYSMEM_AIX}

/* Define to 1 if the amount of physical memory can be detected with
   getinvent_r(). */
#cmakedefine TUKLIB_PHYSMEM_GETINVENT_R ${TUKLIB_PHYSMEM_GETINVENT_R}

/* Define to 1 if the amount of physical memory can be detected with
   getsysinfo(). */
#cmakedefine TUKLIB_PHYSMEM_GETSYSINFO ${TUKLIB_PHYSMEM_GETSYSINFO}

/* Define to 1 if the amount of physical memory can be detected with
   pstat_getstatic(). */
#cmakedefine TUKLIB_PHYSMEM_PSTAT_GETSTATIC ${TUKLIB_PHYSMEM_PSTAT_GETSTATIC}

/* Define to 1 if the amount of physical memory can be detected with
   sysconf(_SC_PAGESIZE) and sysconf(_SC_PHYS_PAGES). */
#cmakedefine TUKLIB_PHYSMEM_SYSCONF ${TUKLIB_PHYSMEM_SYSCONF}

/* Define to 1 if the amount of physical memory can be detected with sysctl().
   */
#cmakedefine TUKLIB_PHYSMEM_SYSCTL ${TUKLIB_PHYSMEM_SYSCTL}

/* Define to 1 if the amount of physical memory can be detected with Linux
   sysinfo(). */
#cmakedefine TUKLIB_PHYSMEM_SYSINFO ${TUKLIB_PHYSMEM_SYSINFO}

/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__
#endif


/* Version number of package */
#cmakedefine VERSION

/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
#  undef WORDS_BIGENDIAN
# endif
#endif

/* Enable large inode numbers on Mac OS X 10.5.  */
#ifndef _DARWIN_USE_64_BIT_INODE
# define _DARWIN_USE_64_BIT_INODE 1
#endif

/* Number of bits in a file offset, on hosts where this is settable. */
#cmakedefine _FILE_OFFSET_BITS

/* Define for large files, on AIX-style hosts. */
#cmakedefine _LARGE_FILES

/* Define to 1 if on MINIX. */
#cmakedefine _MINIX ${}

/* Define to 2 if the system does not provide POSIX.1 features except with
   this defined. */
#cmakedefine _POSIX_1_SOURCE

/* Define to 1 if you need to in order for `stat' and other things to work. */
#cmakedefine _POSIX_SOURCE

/* Define for Solaris 2.5.1 so the uint32_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT32_T

/* Define for Solaris 2.5.1 so the uint64_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT64_T

/* Define for Solaris 2.5.1 so the uint8_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT8_T

/* Define to rpl_ if the getopt replacement functions and variables should be
   used. */
#cmakedefine __GETOPT_PREFIX

/* Define to the type of a signed integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine int32_t

/* Define to the type of a signed integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine int64_t

/* Define to the type of an unsigned integer type of width exactly 16 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint16_t

/* Define to the type of an unsigned integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint32_t

/* Define to the type of an unsigned integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint64_t

/* Define to the type of an unsigned integer type of width exactly 8 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint8_t

/* Define to the type of an unsigned integer type wide enough to hold a
   pointer, if such a type exists, and if the system does not define it. */
#cmakedefine uintptr_t

#endif
